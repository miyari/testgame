{"version":3,"sources":["assets/base/script/extent/ExPopup.ts","assets/base/script/HotUpdate.ts","assets/_test/script/IAP.ts","assets/_test/script/NativeController.ts","assets/_test/script/Scrape.js","assets/_test/script/Scratch.ts","assets/_test/script/Test.ts"],"names":["_a","cc","_decorator","ccclass","property","NewClass","_super","__extends","_this","apply","this","arguments","maskNode","contentNode","btnClose","destroyOnClose","_oriOpacity","prototype","onLoad","node","getChildByName","opacity","on","Node","EventType","TOUCH_END","hide","start","onEnable","show","scale","maskAction","fadeTo","contentAction","scaleTo","easing","easeBackOut","runAction","easeBackIn","scheduleOnce","destroy","active","__decorate","Boolean","Component","exports","default","HotUpdate","_this_1","manifestUrl","_updating","_canRetry","_storagePath","_updateListener","_am","_failCount","wrapper","countLabel","progressBar","versionCompareHandle","remoteVersion","_localVersion","sys","isNative","log","window","localVersion","updateResource","handleManifestFile","checkUpdate","e","jsb","fileUtils","getWritablePath","versionA","versionB","SETTINGS","hotUpdateVersion","save","vA","split","vB","i","length","a","parseInt","b","AssetsManager","setVerifyCallback","path","asset","compressed","expectedMD5","md5","relativePath","size","os","OS_ANDROID","setMaxConcurrentTask","newUrl","getState","State","UNINITED","manifestString","getStringFromFile","nativeUrl","obj","JSON","parse","packageUrl","remoteManifestUrl","remoteVersionUrl","afterString","stringify","manifest","Manifest","loadLocalManifest","checkCb","event","getEventCode","EventAssetsManager","ERROR_NO_LOCAL_MANIFEST","ERROR_DOWNLOAD_MANIFEST","ERROR_PARSE_MANIFEST","ALREADY_UP_TO_DATE","NEW_VERSION_FOUND","fillRange","setEventCallback","hotUpdate","updateCb","needRestart","failed","UPDATE_PROGRESSION","totalFiles","getTotalFiles","downloadedFiles","getDownloadedFiles","progress","string","toFixed","msg","getMessage","UPDATE_FINISHED","UPDATE_FAILED","ERROR_UPDATING","getAssetId","ERROR_DECOMPRESS","retry","searchPaths","getSearchPaths","newPaths","getLocalManifest","Array","unshift","localStorage","setItem","setSearchPaths","audioEngine","stopAll","sdkbox","IAP","setListener","game","restart","downloadFailedAssets","url","loader","md5Pipe","transformURL","isLoaded","bind","update","onDestroy","type","Asset","Label","Sprite","iapInfo","init","setDebug","onInitialized","success","onSuccess","p","onFailure","onCanceled","onRestored","onProductRequestSuccess","products","onProductRequestFailure","purchase","rawData","NativeController","nativeClipBoard","str","copyTextToClipboard","nativeGetDeviceId","OS_IOS","ret","reflection","callStaticMethod","deviceid","nativeGetAppId","keepScreenOn","Device","setKeepScreenOn","saveToPhotoAlbum","imgPath","selectPhotoFromAlbum","cropPicturesCallback","purpose","instance","Class","extends","properties","mask","Mask","tooltip","scrapteRadiusX","Float","scrapteRadiusY","scrapteArea","scrapeEvents","EventHandler","activeMaskNode","getinitNum","TOUCH_START","_onTouchBegin","TOUCH_MOVE","_onTouchMoved","_onTouchEnd","TOUCH_CANCEL","_onTouchCancel","endScrape","off","comFun","checkScrape","point","getPos","checkPixelPiont","_addCircle","graphics","_graphics","color","ellipse","x","y","lineWidth","fillColor","fill","achieveNum","pixelNum","achieveScrape","touch","getLocation","convertToNodeSpaceAR","initPixel","scrapeNode","children","width","height","widthWide","heightWide","zx","zy","dx","dy","dy1","pixelPiont","rx","ry","isTouch","push","Math","abs","fadeOut","emitEvents","Event","EventCustom","SCRATCH","NativeController_1","require","testSprite","onClick","onClick2","load","err","texture","spriteFrame","SpriteFrame"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAM,IAAAA,KAAAC,GAAAC,YAAAC,UAAAH,GAAAG,SAAAC,WAAAJ,GAAAI;IAGN,IAAAC,WAAA,SAAAC;MAAsCC,UAAAF,UAAAC;MADtC,SAAAD;QAAA,IAAAG,QAAA,SAAAF,UAAAA,OAAAG,MAAAC,MAAAC,cAAAD;QAIIF,MAAAI,WAAA;QAGAJ,MAAAK,cAAA;QAGAL,MAAAM,WAAA;QAGAN,MAAAO,iBAAA;QAGAP,MAAAQ,cAAA;;;MAEAX,SAAAY,UAAAC,SAAA;QAAA,IAAAV,QAAAE;QACI,QAAAA,KAAAE,aACIF,KAAAE,WAAAF,KAAAS,KAAAC,eAAA;QACJ,QAAAV,KAAAG,gBACIH,KAAAG,cAAAH,KAAAS,KAAAC,eAAA;QACJ,QAAAV,KAAAI,aACIJ,KAAAI,WAAAJ,KAAAS,KAAAC,eAAA;QAEJV,KAAAM,cAAAN,KAAAE,SAAAS;QACAX,KAAAI,YACIJ,KAAAI,SAAAQ,GAAArB,GAAAsB,KAAAC,UAAAC,WAAA;UACIjB,MAAAkB;;;MAKZrB,SAAAY,UAAAU,QAAA;MAIAtB,SAAAY,UAAAW,WAAA;QACIlB,KAAAmB;;MAIJxB,SAAAY,UAAAY,OAAA;QACInB,KAAAE,SAAAS,UAAA;QACAX,KAAAG,YAAAiB,QAAA;QAEA,IAAAC,aAAA9B,GAAA+B,OAAA,IAAAtB,KAAAM;QACA,IAAAiB,gBAAAhC,GAAAiC,QAAA,IAAA;QACAD,cAAAE,OAAAlC,GAAAmC;QACA1B,KAAAE,SAAAyB,UAAAN;QACArB,KAAAG,YAAAwB,UAAAJ;;MAGJ5B,SAAAY,UAAAS,OAAA;QAAA,IAAAlB,QAAAE;QACIA,KAAAE,SAAAS,UAAA;QACA,IAAAY,gBAAAhC,GAAAiC,QAAA,IAAA;QACAD,cAAAE,OAAAlC,GAAAqC;QACA5B,KAAAG,YAAAwB,UAAAJ;QACAvB,KAAA6B,aAAA;UACI/B,MAAAO,iBACIP,MAAAW,KAAAqB,YAEAhC,MAAAW,KAAAsB,SAAA;WAER;;MA7DJC,aADCtC,SAAAH,GAAAsB,SACyBlB,SAAAY,WAAA,iBAAA;MAG1ByB,aADCtC,SAAAH,GAAAsB,SAC4BlB,SAAAY,WAAA,oBAAA;MAG7ByB,aADCtC,SAAAH,GAAAsB,SACyBlB,SAAAY,WAAA,iBAAA;MAG1ByB,aADCtC,SAAAH,GAAA0C,YACsBtC,SAAAY,WAAA,uBAAA;MAGvByB,aADCtC,YAC2BC,SAAAY,WAAA,oBAAA;MAfXZ,WAAAqC,aADpBvC,WACoBE;MAkErB,OAAAA;KAlEA,CAAAJ,GAAA2C;IAAqBC,QAAAC,UAAAzC;;;;;;;;;ICDf,IAAAL,KAAAC,GAAAC,YAAAC,UAAAH,GAAAG,SAAAC,WAAAJ,GAAAI;IAGN,IAAA2C,YAAA,SAAAzC;MAAuCC,UAAAwC,WAAAzC;MADvC,SAAAyC;QAAA,IAAAC,UAAA,SAAA1C,UAAAA,OAAAG,MAAAC,MAAAC,cAAAD;QAIIsC,QAAAC,cAAA;QAGAD,QAAAE,YAAA;QAGAF,QAAAG,YAAA;QAGAH,QAAAI,eAAA;QAGAJ,QAAAK,kBAAA;QAGAL,QAAAM,MAAA;QAGAN,QAAAO,aAAA;QAGAP,QAAAQ,UAAA;QAGAR,QAAAS,aAAA;QAGAT,QAAAU,cAAA;QAGAV,QAAAW,uBAAA;QAGAX,QAAAY,gBAAA;QAGAZ,QAAAa,gBAAA;;;MAEAd,UAAA9B,UAAAC,SAAA;MAIA6B,UAAA9B,UAAAU,QAAA;QACI;UAMI,KAAA1B,GAAA6D,IAAAC,UAAA;YACI9D,GAAA+D,IAAA;YACA;;UAGJtD,KAAAmD,gBAAAI,OAAAC;UACAxD,KAAAyD;UAITzD,KAAA0D,mBAAA;UAGS1D,KAAA2D;UACF,OAAAC;UACErE,GAAA+D,IAAAM;;;MAIRvB,UAAA9B,UAAAkD,iBAAA;QACIzD,KAAA0C,gBAAAmB,IAAAC,YAAAD,IAAAC,UAAAC,oBAAA,OAAA,WAAA/D,KAAAmD;QACA5D,GAAA+D,IAAA,sDAAAtD,KAAA0C;QAQA,IAAA5C,QAAAE;QACAA,KAAAiD,uBAAA,SAAAe,UAAAC;UACIC,SAAAC,mBAAAH;UACAE,SAAAE;UACAtE,MAAAoD,gBAAAe;UACA1E,GAAA+D,IAAA,6CAAAU,WAAA,oBAAAC;UACA,IAAAI,KAAAL,SAAAM,MAAA;UACA,IAAAC,KAAAN,SAAAK,MAAA;UACA,KAAA,IAAAE,IAAA,GAAAA,IAAAH,GAAAI,UAAAD,GAAA;YACI,IAAAE,IAAAC,SAAAN,GAAAG;YACA,IAAAI,IAAAD,SAAAJ,GAAAC,MAAA;YACA,IAAAE,MAAAE,GACI;YAGA,OAAAF,IAAAE;;UAGR,OAAAL,GAAAE,SAAAJ,GAAAI,UACI,IAGA;;QAKRzE,KAAA4C,MAAA,IAAAiB,IAAAgB,cAAA,IAAA7E,KAAA0C,cAAA1C,KAAAiD;QAIAjD,KAAA4C,IAAAkC,kBAAA,SAAAC,MAAAC;UAEI,IAAAC,aAAAD,MAAAC;UAEA,IAAAC,cAAAF,MAAAG;UAEA,IAAAC,eAAAJ,MAAAD;UAEA,IAAAM,OAAAL,MAAAK;UACA,IAAAJ,YAAA;YACI1F,GAAA+D,IAAA,2BAAA8B;YACA,OAAA;;UAGA7F,GAAA+D,IAAA,2BAAA8B,eAAA,OAAAF,cAAA;UACA,OAAA;;QAIR3F,GAAA+D,IAAA;QAEA,IAAA/D,GAAA6D,IAAAkC,OAAA/F,GAAA6D,IAAAmC,YAAA;UAGIvF,KAAA4C,IAAA4C,qBAAA;UACAjG,GAAA+D,IAAA;;;MAIRjB,UAAA9B,UAAAmD,qBAAA,SAAA+B;QACIlG,GAAA+D,IAAA,yBAAAmC;QACA,IAAAzF,KAAA4C,IAAA8C,eAAA7B,IAAAgB,cAAAc,MAAAC,UAAA;UAEI,IAAAC,iBAAAhC,IAAAC,UAAAgC,kBAAA9F,KAAA0C,eAAA;UACA,MAAAmD,eAAApB,WACIoB,iBAAAhC,IAAAC,UAAAgC,kBAAA9F,KAAAuC,YAAAwD;UAIJ,IAAAC,MAAAC,KAAAC,MAAAL;UACAG,IAAAG,aAAAV;UACAO,IAAAI,oBAAAX,SAAA;UACAO,IAAAK,mBAAAZ,SAAA;UACA,IAAAa,cAAAL,KAAAM,UAAAP;UACAzG,GAAA+D,IAAA,sBAAA0C,IAAAK;UACA,IAAAG,WAAA,IAAA3C,IAAA4C,SAAAH,aAAAtG,KAAA0C;UACA1C,KAAA4C,IAAA8D,kBAAAF,UAAAxG,KAAA0C;;;MAIRL,UAAA9B,UAAAoG,UAAA,SAAAC;QACIrH,GAAA+D,IAAA,WAAAsD,MAAAC;QACA,QAAAD,MAAAC;SAEI,KAAAhD,IAAAiD,mBAAAC;UACIxH,GAAA+D,IAAA;UACAtD,KAAA8C,QAAAf,SAAA;UACA;;SACJ,KAAA8B,IAAAiD,mBAAAE;SACA,KAAAnD,IAAAiD,mBAAAG;UACI1H,GAAA+D,IAAA;UACAtD,KAAA8C,QAAAf,SAAA;UACA;;SACJ,KAAA8B,IAAAiD,mBAAAI;UACI3H,GAAA+D,IAAA;UACAtD,KAAA8C,QAAAf,SAAA;UACA;;SACJ,KAAA8B,IAAAiD,mBAAAK;UACI5H,GAAA+D,IAAA;UACAtD,KAAAgD,YAAAoE,YAAA;UACA;;SACJ;UACI;;QAGRpH,KAAA4C,IAAAyE,iBAAA;QAEArH,KAAAwC,YAAA;QAEA,IAAAoE,MAAAC,mBAAAhD,IAAAiD,mBAAAK,mBAAA;UACInH,KAAA8C,QAAAf,SAAA;UACA/B,KAAAsH;;;MAIRjF,UAAA9B,UAAAgH,WAAA,SAAAX;QACI,IAAAY,cAAA;QACA,IAAAC,SAAA;QACA,QAAAb,MAAAC;SAEI,KAAAhD,IAAAiD,mBAAAC;UACIxH,GAAA+D,IAAA;UACAmE,SAAA;UACA;;SACJ,KAAA5D,IAAAiD,mBAAAY;UACI,IAAAC,aAAAf,MAAAgB;UACA,IAAAC,kBAAAjB,MAAAkB;UACA,IAAAH,cAAA,KAAAE,kBAAA,GAAA;YACI,IAAAE,WAAAF,kBAAAF;YACA3H,KAAA+C,WAAAiF,UAAA,MAAAD,UAAAE,QAAA,KAAA,QAAAJ,kBAAA,MAAAF,aAAA;YACA3H,KAAAgD,YAAAoE,YAAAW;iBAEA/H,KAAA+C,WAAAiF,SAAA;UAGJ,IAAAE,MAAAtB,MAAAuB;UACAD,OACI3I,GAAA+D,IAAA,mBAAA4E;UAEJ;;SACJ,KAAArE,IAAAiD,mBAAAE;SACA,KAAAnD,IAAAiD,mBAAAG;UACI1H,GAAA+D,IAAA;UACAmE,SAAA;UACA;;SACJ,KAAA5D,IAAAiD,mBAAAI;UACI3H,GAAA+D,IAAA;UACAmE,SAAA;UACA;;SACJ,KAAA5D,IAAAiD,mBAAAsB;UACI7I,GAAA+D,IAAA,sBAAAsD,MAAAuB;UACAnI,KAAA+C,WAAAiF,SAAA;UACAR,cAAA;UACAtD,SAAAC,mBAAAnE,KAAAkD;UACAgB,SAAAE;UACA;;SACJ,KAAAP,IAAAiD,mBAAAuB;UACI9I,GAAA+D,IAAA,oBAAAsD,MAAAuB;UACAnI,KAAAwC,YAAA;UACAxC,KAAAyC,YAAA;UACA;;SACJ,KAAAoB,IAAAiD,mBAAAwB;UACI/I,GAAA+D,IAAA,yBAAAsD,MAAA2B,eAAA,OAAA3B,MAAAuB;UACA;;SACJ,KAAAtE,IAAAiD,mBAAA0B;UACIjJ,GAAA+D,IAAAsD,MAAAuB;;QAMR,IAAAV,QAAA;UACIzH,KAAA4C,IAAAyE,iBAAA;UACArH,KAAA2C,kBAAA;UACA3C,KAAAwC,YAAA;UACAxC,KAAAyI;;QAGJ,IAAAjB,aAAA;UACIxH,KAAA4C,IAAAyE,iBAAA;UACArH,KAAA2C,kBAAA;UAEA,IAAA+F,cAAA7E,IAAAC,UAAA6E;UACA,IAAAC,WAAA5I,KAAA4C,IAAAiG,mBAAAF;UACApJ,GAAA+D,IAAA,gBAAA2C,KAAAM,UAAAqC;UACAE,MAAAvI,UAAAwI,QAAAhJ,MAAA2I,aAAAE;UACArJ,GAAA+D,IAAA,mBAAA2C,KAAAM,UAAAmC;UAIAnJ,GAAA6D,IAAA4F,aAAAC,QAAA,yBAAAjJ,KAAAmD,eAAA8C,KAAAM,UAAAmC;UAGA7E,IAAAC,UAAAoF,eAAAR;UAEAnJ,GAAA4J,YAAAC;UACA7J,GAAA+D,IAAA;UACA,IAAA+F,OAAAC,KAAA;YACI/J,GAAA+D,IAAA;YACA+F,OAAAC,IAAAC;;UAEJvJ,KAAA6B,aAAA;YACItC,GAAAiK,KAAAC;aACJ;;;MAIRpH,UAAA9B,UAAAkI,QAAA;QACI,KAAAzI,KAAAwC,aAAAxC,KAAAyC,WAAA;UAEIzC,KAAAyC,YAAA;UAEAlD,GAAA+D,IAAA;UACAtD,KAAA4C,IAAA8G;;;MAIRrH,UAAA9B,UAAAoD,cAAA;QACIpE,GAAA+D,IAAA;QACA,IAAAtD,KAAAwC,WAAA;UACIjD,GAAA+D,IAAA;UACA;;QAEJ,IAAAtD,KAAA4C,IAAA8C,eAAA7B,IAAAgB,cAAAc,MAAAC,UAAA;UAEIrG,GAAA+D,IAAA;UACA,IAAAqG,MAAA3J,KAAAuC,YAAAwD;UACAxG,GAAAqK,OAAAC,YACIF,MAAApK,GAAAqK,OAAAC,QAAAC,aAAAH;UAEJ3J,KAAA4C,IAAA8D,kBAAAiD;;QAEJ,KAAA3J,KAAA4C,IAAAiG,uBAAA7I,KAAA4C,IAAAiG,mBAAAkB,YAAA;UACIxK,GAAA+D,IAAA;UACA;;QAEJtD,KAAA4C,IAAAyE,iBAAArH,KAAA2G,QAAAqD,KAAAhK;QAEAA,KAAA4C,IAAAe;QACA3D,KAAAwC,YAAA;;MAGJH,UAAA9B,UAAA+G,YAAA;QACI/H,GAAA+D,IAAA;QACA,IAAA,SAAAtD,KAAA4C,OAAA5C,KAAAwC,WAkBIxC,KAAA+C,WAAAiF,SAAA,0BAlBJ;UACIzI,GAAA+D,IAAA;UACAtD,KAAA4C,IAAAyE,iBAAArH,KAAAuH,SAAAyC,KAAAhK;UAEA,IAAAA,KAAA4C,IAAA8C,eAAA7B,IAAAgB,cAAAc,MAAAC,UAAA;YAEI,IAAA+D,MAAA3J,KAAAuC,YAAAwD;YACAxG,GAAAqK,OAAAC,YACIF,MAAApK,GAAAqK,OAAAC,QAAAC,aAAAH;YAEJ3J,KAAA4C,IAAA8D,kBAAAiD;;UAGJ3J,KAAA6C,aAAA;UACA7C,KAAA4C,IAAAqH;UAEAjK,KAAAwC,YAAA;;;MAMRH,UAAA9B,UAAA2J,YAAA;QACI,IAAAlK,KAAA2C,iBAAA;UACI3C,KAAA4C,IAAAyE,iBAAA;UACArH,KAAA2C,kBAAA;;;MA5VRX,aADCtC;QAAAyK,MAAA5K,GAAA6K;YAC6B/H,UAAA9B,WAAA,oBAAA;MAG9ByB,aADCtC,YAC2B2C,UAAA9B,WAAA,kBAAA;MAG5ByB,aADCtC,YAC2B2C,UAAA9B,WAAA,kBAAA;MAG5ByB,aADCtC,YAC0B2C,UAAA9B,WAAA,qBAAA;MAG3ByB,aADCtC,YAC4B2C,UAAA9B,WAAA,wBAAA;MAG7ByB,aADCtC,YACgB2C,UAAA9B,WAAA,YAAA;MAGjByB,aADCtC,YACuB2C,UAAA9B,WAAA,mBAAA;MAGxByB,aADCtC,SAAAH,GAAAsB,SACwBwB,UAAA9B,WAAA,gBAAA;MAGzByB,aADCtC,SAAAH,GAAA8K,UAC4BhI,UAAA9B,WAAA,mBAAA;MAG7ByB,aADCtC,SAAAH,GAAA+K,WAC8BjI,UAAA9B,WAAA,oBAAA;MAG/ByB,aADCtC,YACsC2C,UAAA9B,WAAA,6BAAA;MAGvCyB,aADCtC,YAC2B2C,UAAA9B,WAAA,sBAAA;MAG5ByB,aADCtC,YAC2B2C,UAAA9B,WAAA,sBAAA;MAvCX8B,YAAAL,aADpBvC,WACoB4C;MAkWrB,OAAAA;KAlWA,CAAA9C,GAAA2C;IAAqBC,QAAAC,UAAAC;;;;;;;;;ICLf,IAAA/C,KAAAC,GAAAC,YAAAC,UAAAH,GAAAG,SAAAC,WAAAJ,GAAAI;IAIN,IAAAC,WAAA,SAAAC;MAAsCC,UAAAF,UAAAC;MADtC,SAAAD;QAAA,IAAA2C,UAAA,SAAA1C,UAAAA,OAAAG,MAAAC,MAAAC,cAAAD;QAGIsC,QAAAiI,UAAA;;;MAEA5K,SAAAY,UAAAC,SAAA;QACIR,KAAAwK;;MAGJ7K,SAAAY,UAAAiK,OAAA;QAAA,IAAAlI,UAAAtC;QACIT,GAAA+D,IAAA;QACA,IAAA/D,GAAA6D,IAAAC,UAAA;UACI,IAAAvD,QAAAE;UACAqJ,OAAAC,IAAAmB,SAAA;UACApB,OAAAC,IAAAC;YACImB,eAAA,SAAAC;cAEIpL,GAAA+D,IAAA,mBAAA2C,KAAAM,UAAAoE;;YAEJC,WAAA,SAAAC;cACI,IAAA/K,QAAAwC;cACA/C,GAAA+D,IAAA,eAAA2C,KAAAM,UAAAsE;;YAEJC,WAAA,SAAAD,GAAA3C;cACI3I,GAAA+D,IAAA;cACA/D,GAAA+D,IAAA2C,KAAAM,UAAAsE,IAAA3C;cACA3I,GAAA+D,IAAA;;YAEJyH,YAAA,SAAAF;cACItL,GAAA+D,IAAA,gBAAA2C,KAAAM,UAAAsE;cACAtL,GAAA+D,IAAA;;YAEJ0H,YAAA,SAAAH;cACItL,GAAA+D,IAAA,gBAAA2C,KAAAM,UAAAsE;;YAEJI,yBAAA,SAAAC;cACI5I,QAAAiI,QAAAvC,SAAA/B,KAAAM,UAAA2E;cACA3L,GAAA+D,IAAA,6BAAA2C,KAAAM,UAAA2E;;YAEJC,yBAAA,SAAAjD;cACI3I,GAAA+D,IAAA,8BAAA2C,KAAAM,UAAA2B;cACA3I,GAAA+D,IAAA,6BAAA2C,KAAAM,UAAA2B;;;UAKR3I,GAAA+D,IAAA;UACA+F,OAAAC,OAAeD,OAAAC,IAAAkB;;;MAQvB7K,SAAAY,UAAA6K,WAAA,SAAAxE,OAAAyE;QACI9L,GAAA+D,IAAA,sBAAA+H;QACAhC,OAAAC,IAAA8B,SAAAC;;MAtDJrJ,aADCtC,SAAAH,GAAA8K,UACyB1K,SAAAY,WAAA,gBAAA;MAFTZ,WAAAqC,aADpBvC,WACoBE;MA2DrB,OAAAA;KA3DA,CAAAJ,GAAA2C;IAAqBC,QAAAC,UAAAzC;;;;;;;;;ICJrB,IAAA2L,mBAAA;MAEI,SAAAA;MAEOA,iBAAA/K,UAAAgL,kBAAA,SAAAC;QACHjM,GAAA6D,IAAAC,YACIQ,IAAA4H,oBAAAD;;MAaDF,iBAAA/K,UAAAmL,oBAAA;QACH,IAAAnM,GAAA6D,IAAAC,YAAA9D,GAAA6D,IAAAkC,MAAA/F,GAAA6D,IAAAuI,QAAA;UACI,IAAAC,MAAA/H,IAAAgI,WAAAC,iBAAA,oBAAA;UACAvM,GAAA+D,IAAAsI;UACA,OAAAA;;QAGJ,IAAArM,GAAA6D,IAAAC,YAAA9D,GAAA6D,IAAAkC,MAAA/F,GAAA6D,IAAAmC,YAAA;UACI,IAAAwG,WAAAlI,IAAAgI,WAAAC,iBAAA,uCAAA,eAAA;UACAvM,GAAA+D,IAAAyI;UACA,OAAAA;;QAGJ,OAAA;;MAGGT,iBAAA/K,UAAAyL,iBAAA;QACH,IAAAzM,GAAA6D,IAAAC,YAAA9D,GAAA6D,IAAAkC,MAAA/F,GAAA6D,IAAAuI,QAAA;UACI,IAAAC,MAAA/H,IAAAgI,WAAAC,iBAAA,oBAAA;UACAvM,GAAA+D,IAAAsI;UACA,OAAAA;;QAGJ,IAAArM,GAAA6D,IAAAC,YAAA9D,GAAA6D,IAAAkC,MAAA/F,GAAA6D,IAAAmC,YAAA;UACI,IAAAqG,MAAA/H,IAAAgI,WAAAC,iBAAA,uCAAA,YAAA;UACAvM,GAAA+D,IAAAsI;UACA,OAAAA;;QAGJ,OAAA;;MAGGN,iBAAA/K,UAAA0L,eAAA;QASH1M,GAAA6D,IAAAC,YACIQ,IAAAqI,OAAAC,gBAAA;;MAKDb,iBAAA/K,UAAA6L,mBAAA,SAAAC;QACH,IAAA9M,GAAA6D,IAAAC,YAAA9D,GAAA6D,IAAAkC,MAAA/F,GAAA6D,IAAAuI,QAAA;UACI,IAAAC,MAAA/H,IAAAgI,WAAAC,iBAAA,oBAAA,qBAAAO;UACA9M,GAAA+D,IAAA;UACA,OAAAsI;;QAGJ,IAAArM,GAAA6D,IAAAC,YAAA9D,GAAA6D,IAAAkC,MAAA/F,GAAA6D,IAAAmC,YAAA;UACI1B,IAAAgI,WAAAC,iBAAA,uCAAA,oBAAA,yBAAAO;UACA9M,GAAA+D,IAAA;;;MAIDgI,iBAAA/K,UAAA+L,uBAAA;QACH,IAAA/M,GAAA6D,IAAAC,YAAA9D,GAAA6D,IAAAkC,MAAA/F,GAAA6D,IAAAuI,QAAA;UACI,IAAAC,MAAA/H,IAAAgI,WAAAC,iBAAA,oBAAA;UACAvM,GAAA+D,IAAA;UACA,OAAAsI;;;MAKDN,iBAAA/K,UAAAgM,uBAAA,SAAAC,SAAA7C;QACHpK,GAAA+D,IAAA,qCAAAkJ,UAAA,WAAA7C;;MAxFmB2B,iBAAAmB,WAAA,IAAAnB;MA2F3B,OAAAA;KA5FA;IAAqBnJ,QAAAC,UAAAkJ;;;;;;;ICArB/L,GAAAmN;MACIC,SAAApN,GAAA2C;MAEA0K;QACIC;UACIzK,SAAA;UACA+H,MAAA5K,GAAAuN;UACAC,SAAA;;QAEJC;UACI5K,SAAA;UACA+H,MAAA5K,GAAA0N;UACAF,SAAA;;QAEJG;UACI9K,SAAA;UACA+H,MAAA5K,GAAA0N;UACAF,SAAA;;QAEJI;UACI/K,SAAA;UACA+H,MAAA5K,GAAA0N;UACAF,SAAA;;QAEJK;UACIhL;UACA+H,QAAA5K,GAAA2C,UAAAmL;UACAN,SAAA;;;MAKRvM,QAAA,SAAAA;QACIR,KAAAsN;;MAGJA,gBAAA,SAAAA;QACItN,KAAAuN;QACAvN,KAAAS,KAAAG,GAAArB,GAAAsB,KAAAC,UAAA0M,aAAAxN,KAAAyN,eAAAzN;QACAA,KAAAS,KAAAG,GAAArB,GAAAsB,KAAAC,UAAA4M,YAAA1N,KAAA2N,eAAA3N;QACAA,KAAAS,KAAAG,GAAArB,GAAAsB,KAAAC,UAAAC,WAAAf,KAAA4N,aAAA5N;QACAA,KAAAS,KAAAG,GAAArB,GAAAsB,KAAAC,UAAA+M,cAAA7N,KAAA8N,gBAAA9N;;MAMJ+N,WAAA,SAAAA;QACI/N,KAAAS,KAAAuN,IAAAzO,GAAAsB,KAAAC,UAAA0M,aAAAxN,KAAAyN,eAAAzN;QACAA,KAAAS,KAAAuN,IAAAzO,GAAAsB,KAAAC,UAAA4M,YAAA1N,KAAA2N,eAAA3N;QACAA,KAAAS,KAAAuN,IAAAzO,GAAAsB,KAAAC,UAAAC,WAAAf,KAAA4N,aAAA5N;QACAA,KAAAS,KAAAuN,IAAAzO,GAAAsB,KAAAC,UAAA+M,cAAA7N,KAAA8N,gBAAA9N;;MAMJyN,eAAA,SAAAA,cAAA7G;QACIrH,GAAA+D,IAAA;QACAtD,KAAAiO,OAAArH;;MAGJ+G,eAAA,SAAAA,cAAA/G;QACI5G,KAAAiO,OAAArH;;MAGJgH,aAAA,SAAAA,YAAAhH;QACIrH,GAAA+D,IAAA;QACAtD,KAAAkO;QACAlO,KAAAiO,OAAArH;;MAGJkH,gBAAA,SAAAA,eAAAlH;QACIrH,GAAA+D,IAAA;QACAtD,KAAAkO;;MAGJhE,WAAA,SAAAA;QACIlK,KAAA+N;;MAGJE,QAAA,SAAAA,OAAArH;QACI,IAAAuH,QAAAnO,KAAAoO,OAAAxH;QACA5G,KAAAqO,gBAAAF;QACAnO,KAAAsO,WAAAH;;MAOJG,YAAA,SAAAA,WAAAH;QACI,IAAAI,WAAAvO,KAAA6M,KAAA2B;QAEA,IAAAC,QAAAlP,GAAAkP,MAAA,GAAA,GAAA,GAAA;QAEAF,SAAAG,QAAAP,MAAAQ,GAAAR,MAAAS,GAAA,IAAA5O,KAAAgN,gBAAA,IAAAhN,KAAAkN;QACAqB,SAAAM,YAAA;QAEAN,SAAAO,YAAAL;QAEAF,SAAAQ;;MAMJb,aAAA,SAAAA;QACI3O,GAAA+D,IAAA,mCAAAtD,KAAAgP;QACAzP,GAAA+D,IAAA,yCAAAtD,KAAAiP;QACA,IAAAjP,KAAAgP,aAAAhP,KAAAiP,UAAA;UACI1P,GAAA+D,IAAA;UACAtD,KAAAkP;;;MAQRd,QAAA,SAAAA,OAAAxK;QACI,IAAAuK,QAAAvK,EAAAuL,MAAAC;QACAjB,QAAAnO,KAAAS,KAAA4O,qBAAAlB;QACA,OAAAA;;MAMJZ,YAAA,SAAAA;QACIvN,KAAAiP,WAAA;QAEAjP,KAAAgP,aAAAhP,KAAAmN,cAAAnN,KAAAsP;;MAOJA,WAAA,SAAAA;QACItP,KAAAuP,aAAAvP,KAAA6M,KAAApM,KAAA+O,SAAA;QACA,IAAAb,IAAA3O,KAAAuP,WAAAE,OAAAb,IAAA5O,KAAAuP,WAAAG;QAGA1P,KAAAS,KAAAgP,QAAAd;QACA3O,KAAAS,KAAAiP,SAAAd;QAGA5O,KAAA2P,YAAAhB,IAAA,IAAA;QACA3O,KAAA4P,aAAAjB,IAAA,IAAA;QACA,IAAAkB,KAAAlB,IAAA,GAAAmB,KAAAlB,IAAA,GAAAmB,MAAAF,IAAAG,MAAAF,IAAAG,MAAAD;QACA,IAAAE;QACA,IAAAC,KAAA,IAAAnQ,KAAAgN;QACA,IAAAoD,KAAA,IAAApQ,KAAAkN;QAGA,MAAA6C,MAAAF,IAAAE,MAAAI,IACI,KAAAH,KAAAC,KAAAD,MAAAF,IAAAE,MAAAI,IAAA;UACI,IAAAvF,MAAAkF,IAAAC;UAGAnF,EAAAwF,UAAA;UACAH,WAAAI,KAAAzF;;QAGR7K,KAAAkQ,aAAAA;QAEA,OAAAA,WAAAzL;;MAMJ4J,iBAAA,SAAAA,gBAAAF;QACI,IAAA+B,aAAAlQ,KAAAkQ;QACA,IAAAvB,GAAAC;QACA,KAAA,IAAApK,KAAA0L,YAAA;UACIvB,IAAA4B,KAAAC,IAAArC,MAAAQ,IAAAuB,WAAA1L,GAAA;UACAoK,IAAA2B,KAAAC,IAAArC,MAAAS,IAAAsB,WAAA1L,GAAA;UACA,IAAAmK,KAAA3O,KAAAgN,kBAAA4B,KAAA5O,KAAAkN,kBAAAgD,WAAA1L,GAAA6L,SAAA;YAEIH,WAAA1L,GAAA6L,UAAA;YACArQ,KAAAiP;YACA;;;;MAQZC,eAAA,SAAAA;QAAgB,IAAApP,QAAAE;QACZA,KAAA+N;QAEA/N,KAAA6M,KAAApM,KAAAkB,UAAApC,GAAAkR,QAAA;QACAzQ,KAAA6B,aAAA;UAEItC,GAAA2C,UAAAmL,aAAAqD,WAAA5Q,MAAAsN,cAAA,IAAA7N,GAAAoR,MAAAC,YAAA;UAEH5G,KAAAhK,OAAA;;;;;;;;;;;ICvMH,IAAAV,KAAAC,GAAAC,YAAAC,UAAAH,GAAAG,SAAAC,WAAAJ,GAAAI;IAGN,IAAAC,WAAA,SAAAC;MAAsCC,UAAAF,UAAAC;MADtC,SAAAD;QAAA,IAAAG,QAAA,SAAAF,UAAAA,OAAAG,MAAAC,MAAAC,cAAAD;QAIIF,MAAA+M,OAAA;QAGA/M,MAAAkN,iBAAA;QAGAlN,MAAAoN,iBAAA;QAGApN,MAAAqN,cAAA;QAGArN,MAAAmP,WAAA;QAGAnP,MAAAkP,aAAA;QAGAlP,MAAAoQ,aAAA;QAMApQ,MAAAsN;;;MAEAzN,SAAAY,UAAAC,SAAA;QACIR,KAAAwK;QACCjH,OAAAsN,UAAA7Q;;MAGLL,SAAAY,UAAA2J,YAAA;QACIlK,KAAA+N;;MAGJpO,SAAAY,UAAAiK,OAAA;QACIxK,KAAAuN;QACAvN,KAAAS,KAAAG,GAAArB,GAAAsB,KAAAC,UAAA0M,aAAAxN,KAAAyN,eAAAzN;QACAA,KAAAS,KAAAG,GAAArB,GAAAsB,KAAAC,UAAA4M,YAAA1N,KAAA2N,eAAA3N;QACAA,KAAAS,KAAAG,GAAArB,GAAAsB,KAAAC,UAAAC,WAAAf,KAAA4N,aAAA5N;QACAA,KAAAS,KAAAG,GAAArB,GAAAsB,KAAAC,UAAA+M,cAAA7N,KAAA8N,gBAAA9N;;MAMJL,SAAAY,UAAAwN,YAAA;QACI/N,KAAAS,KAAAuN,IAAAzO,GAAAsB,KAAAC,UAAA0M,aAAAxN,KAAAyN,eAAAzN;QACAA,KAAAS,KAAAuN,IAAAzO,GAAAsB,KAAAC,UAAA4M,YAAA1N,KAAA2N,eAAA3N;QACAA,KAAAS,KAAAuN,IAAAzO,GAAAsB,KAAAC,UAAAC,WAAAf,KAAA4N,aAAA5N;QACAA,KAAAS,KAAAuN,IAAAzO,GAAAsB,KAAAC,UAAA+M,cAAA7N,KAAA8N,gBAAA9N;;MAMJL,SAAAY,UAAAgN,aAAA;QACIvN,KAAAiP,WAAA;QAEAjP,KAAAgP,aAAAhP,KAAAmN,cAAAnN,KAAAsP;;MAOJ3P,SAAAY,UAAA+O,YAAA;QACI,IAAApP,WAAAF,KAAA6M,KAAApM,KAAA+O,SAAA;QACA,IAAAb,IAAAzO,SAAAuP,OAAAb,IAAA1O,SAAAwP;QAGA,IAAAG,KAAAlB,IAAA,GAAAmB,KAAAlB,IAAA,GAAAmB,MAAAF,IAAAG,MAAAF,IAAAG,MAAAD;QACA,IAAAE;QACA,IAAAC,KAAA,IAAAnQ,KAAAgN;QACA,IAAAoD,KAAA,IAAApQ,KAAAkN;QAGA,MAAA6C,MAAAF,IAAAE,MAAAI,IACI,KAAAH,KAAAC,KAAAD,MAAAF,IAAAE,MAAAI,IAAA;UACI,IAAAvF,MAAAkF,IAAAC;UAGAnF,EAAAwF,UAAA;UACAH,WAAAI,KAAAzF;;QAGR7K,KAAAkQ,aAAAA;QAEA,OAAAA,WAAAzL;;MAOJ9E,SAAAY,UAAAkN,gBAAA,SAAA7G;QAEI5G,KAAAiO,OAAArH;;MAGJjH,SAAAY,UAAAoN,gBAAA,SAAA/G;QACI5G,KAAAiO,OAAArH;;MAGJjH,SAAAY,UAAAqN,cAAA,SAAAhH;QAEI5G,KAAAkO;QACAlO,KAAAiO,OAAArH;;MAGJjH,SAAAY,UAAAuN,iBAAA,SAAAlH;QACIrH,GAAA+D,IAAA;QACAtD,KAAAkO;;MAGJvO,SAAAY,UAAA0N,SAAA,SAAArH;QACI,IAAAuH,QAAAvH,MAAAuI,MAAAC;QACAjB,QAAAnO,KAAA6M,KAAApM,KAAA4O,qBAAAlB;QACAnO,KAAAqO,gBAAAF;QACAnO,KAAAsO,WAAAH;;MAMJxO,SAAAY,UAAA2N,cAAA;QACI3O,GAAA+D,IAAA,+BAAAtD,KAAAiP,WAAA,MAAAjP,KAAAgP;QACA,IAAAhP,KAAAgP,aAAAhP,KAAAiP,UAAA;UACI1P,GAAA+D,IAAA;UACAtD,KAAAkP;;;MAORvP,SAAAY,UAAA8N,kBAAA,SAAAF;QACI,IAAA+B,aAAAlQ,KAAAkQ;QACA,IAAAvB,GAAAC;QACA,KAAA,IAAApK,KAAA0L,YAAA;UACIvB,IAAA4B,KAAAC,IAAArC,MAAAQ,IAAAuB,WAAA1L,GAAA;UACAoK,IAAA2B,KAAAC,IAAArC,MAAAS,IAAAsB,WAAA1L,GAAA;UACA,IAAAmK,KAAA,IAAA3O,KAAAgN,kBAAA4B,KAAA,IAAA5O,KAAAkN,kBAAAgD,WAAA1L,GAAA6L,SAAA;YAEIH,WAAA1L,GAAA6L,UAAA;YACArQ,KAAAiP;YACA;;;;MAQZtP,SAAAY,UAAA2O,gBAAA;QAAA,IAAApP,QAAAE;QACIA,KAAA+N;QAEA/N,KAAA6M,KAAApM,KAAAkB,UAAApC,GAAAkR,QAAA;QACAzQ,KAAA6B,aAAA;UAEItC,GAAA2C,UAAAmL,aAAAqD,WAAA5Q,MAAAsN,cAAA,IAAA7N,GAAAoR,MAAAC,YAAA;UAEJ5G,KAAAhK,OAAA;;MAOJL,SAAAY,UAAA+N,aAAA,SAAAH;QACI,IAAAI,WAAAvO,KAAA6M,KAAA2B;QAEA,IAAAC,QAAAlP,GAAAkP,MAAA,GAAA,GAAA,GAAA;QAEAF,SAAAG,QAAAP,MAAAQ,GAAAR,MAAAS,GAAA,IAAA5O,KAAAgN,gBAAA,IAAAhN,KAAAkN;QACAqB,SAAAM,YAAA;QAEAN,SAAAO,YAAAL;QAEAF,SAAAQ;;MAnLJ/M,aADCtC;QAAAyK,MAAA5K,GAAAuN;QAAAC,SAAA;YACqBpN,SAAAY,WAAA,aAAA;MAGtByB,aADCtC;QAAAqN,SAAA;YACqBpN,SAAAY,WAAA,uBAAA;MAGtByB,aADCtC;QAAAqN,SAAA;YACqBpN,SAAAY,WAAA,uBAAA;MAGtByB,aADCtC;QAAAqN,SAAA;YACiBpN,SAAAY,WAAA,oBAAA;MAGlByB,aADCtC,YACYC,SAAAY,WAAA,iBAAA;MAGbyB,aADCtC,YACcC,SAAAY,WAAA,mBAAA;MAGfyB,aADCtC,YACuBC,SAAAY,WAAA,mBAAA;MAMxByB,aAJCtC;QACGyK,QAAA5K,GAAA2C,UAAAmL;QACAN,SAAA;YAEcpN,SAAAY,WAAA,qBAAA;MA3BDZ,WAAAqC,aADpBvC,WACoBE;MAmNrB,OAAAA;KAnNA,CAAAJ,GAAA2C;IAAqBC,QAAAC,UAAAzC;;;;;;;;;ICHf,IAAAL,KAAAC,GAAAC,YAAAC,UAAAH,GAAAG,SAAAC,WAAAJ,GAAAI;IAGN,IAAAoR,qBAAAC,QAAA;IAGA,IAAApR,WAAA,SAAAC;MAAsCC,UAAAF,UAAAC;MADtC,SAAAD;QAAA,IAAAG,QAAA,SAAAF,UAAAA,OAAAG,MAAAC,MAAAC,cAAAD;QAIIF,MAAAkR,aAAA;;;MAEArR,SAAAY,UAAA0Q,UAAA,SAAArK;QACGrH,GAAA+D,IAAAwN,mBAAA1O,QAAAqK,SAAAH;;MAGH3M,SAAAY,UAAA2Q,WAAA,SAAAtK;QAAA,IAAA9G,QAAAE;QACIT,GAAAqK,OAAAuH,KAAA,2EAAA,SAAAC,KAAAC;UACIvR,MAAAkR,WAAAM,cAAA,IAAA/R,GAAAgS,YAAAF;;;MARRrP,aADCtC,SAAAH,GAAA+K,WAC6B3K,SAAAY,WAAA,mBAAA;MAHbZ,WAAAqC,aADpBvC,WACoBE;MAcrB,OAAAA;KAdA,CAAAJ,GAAA2C;IAAqBC,QAAAC,UAAAzC","sourcesContent":["const {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class NewClass extends cc.Component {\n\n    @property(cc.Node)\n    maskNode : cc.Node = null;\n\n    @property(cc.Node)\n    contentNode : cc.Node = null;\n\n    @property(cc.Node)\n    btnClose : cc.Node = null;\n\n    @property(cc.Boolean)\n    destroyOnClose = false;\n\n    @property\n    _oriOpacity : number = null;\n\n    onLoad(){\n        if(this.maskNode == null)\n            this.maskNode = this.node.getChildByName(\"Mask\");\n        if(this.contentNode == null)\n            this.contentNode = this.node.getChildByName(\"Content\");\n        if(this.btnClose == null)\n            this.btnClose = this.node.getChildByName(\"BtnClose\");\n\n        this._oriOpacity = this.maskNode.opacity;\n        if(this.btnClose){\n            this.btnClose.on(cc.Node.EventType.TOUCH_END,()=>{\n                this.hide();\n            });\n        }\n    }\n\n    start(){\n\n    }\n\n    onEnable(){\n        this.show();\n        //(window as any).test = this;\n    }\n\n    show(){\n        this.maskNode.opacity = 0;\n        this.contentNode.scale = 0.2;\n\n        let maskAction = cc.fadeTo(0.5, this._oriOpacity);\n        let contentAction = cc.scaleTo(0.2, 1);\n        contentAction.easing(cc.easeBackOut());\n        this.maskNode.runAction(maskAction);\n        this.contentNode.runAction(contentAction);\n    }\n\n    hide(){\n        this.maskNode.opacity = 0;\n        let contentAction = cc.scaleTo(0.2, 0);\n        contentAction.easing(cc.easeBackIn());\n        this.contentNode.runAction(contentAction);\n        this.scheduleOnce(() => {\n            if(this.destroyOnClose){\n                this.node.destroy();\n            } else {\n                this.node.active = false;\n            }\n        }, 0.2);\n    }\n}","//version1.01\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class HotUpdate extends cc.Component {\n\n    @property({type: cc.Asset})\n    manifestUrl : cc.Asset = null;\n\n    @property\n    _updating : boolean = false;\n\n    @property\n    _canRetry : boolean = false;\n\n    @property\n    _storagePath : string = \"\";\n\n    @property\n    _updateListener : any = null;\n\n    @property\n    _am : any = null;\n\n    @property\n    _failCount : number = 0;\n\n    @property(cc.Node)\n    wrapper : cc.Node = null;\n\n    @property (cc.Label)\n    countLabel : cc.Label = null;\n\n    @property (cc.Sprite)\n    progressBar : cc.Sprite = null;\n\n    @property\n    versionCompareHandle : Function = null;\n\n    @property\n    remoteVersion : string = \"\";\n\n    @property\n    _localVersion : string = \"\";\n\n    onLoad(){\n        //(window as any).HOTUPDATE = this;\n    }\n\n    start() {\n        try{\n            //正在审核\n            //if (GAME_CONFIG.baseConfig.clientMode === 1){\n            //    return;\n            //}\n            // Hot update is only available in Native build\n            if (!cc.sys.isNative) {\n                cc.log(\"Hot update is only available in Native build ,now is not \");\n                return;\n            }\n            //游戏的localVersion，用于大更新时启用不同的update文件夹，避免旧缓存影响新的安装包\n            this._localVersion = window.localVersion;\n            this.updateResource();\n\n            //动态更新游戏的热更地址\n            //this.handleManifestFile(GAME_CONFIG.baseConfig.hotUpdateUrl);\n\t\t\tthis.handleManifestFile(\"http://miyariapps.com/testgame/ios/\");\n            \n\n            this.checkUpdate();\n        } catch(e) {\n            cc.log(e);\n        }\n    }\n\n    updateResource () {\n        this._storagePath = ((jsb.fileUtils ? jsb.fileUtils.getWritablePath() : '/') + 'update' + this._localVersion);   //获取本地缓存目录\n        cc.log('[updateResource] Storage path for remote asset : ' + this._storagePath);\n\n\n        // Setup your own version compare handler, versionA and B is versions in string\n        // if the return value greater than 0, versionA is greater than B,\n        // if the return value equals 0, versionA equals to B,\n        // if the return value smaller than 0, versionA is smaller than B.\n        // versionA: local versionB: remote\n        let _this = this;\n        this.versionCompareHandle = function (versionA, versionB) {\n            SETTINGS.hotUpdateVersion = versionA;\n            SETTINGS.save();\n            _this.remoteVersion = versionB;\n            cc.log(\"JS Custom Version Compare: version A is \" + versionA + ', version B is ' + versionB);\n            let vA = versionA.split('.');\n            let vB = versionB.split('.');\n            for (let i = 0; i < vA.length; ++i) {\n                let a = parseInt(vA[i]);\n                let b = parseInt(vB[i] || 0);\n                if (a === b) {\n                    continue;\n                }\n                else {\n                    return a - b;\n                }\n            }\n            if (vB.length > vA.length) {\n                return -1;\n            }\n            else {\n                return 0;\n            }\n        };\n\n        // Init with empty manifest url for testing custom manifest\n        this._am  = new jsb.AssetsManager('', this._storagePath, this.versionCompareHandle);\n\n        // Setup the verification callback, but we don't have md5 check function yet, so only print some message\n        // Return true if the verification passed, otherwise return false\n        this._am.setVerifyCallback(function (path, asset) {\n            // When asset is compressed, we don't need to check its md5, because zip file have been deleted.\n            let compressed = asset.compressed;\n            // Retrieve the correct md5 value.\n            let expectedMD5 = asset.md5;\n            // asset.path is relative path and path is absolute.\n            let relativePath = asset.path;\n            // The size of asset file, but this value could be absent.\n            let size = asset.size;\n            if (compressed) {\n                cc.log(\"Verification passed : \" + relativePath);\n                return true;\n            }\n            else {\n                cc.log(\"Verification passed : \" + relativePath + ' (' + expectedMD5 + ')');\n                return true;\n            }\n        });\n\n        cc.log('[HotUpdate] is ready, please check or directly update.');\n\n        if (cc.sys.os === cc.sys.OS_ANDROID) {\n            // Some Android device may slow down the download process when concurrent tasks is too much.\n            // The value may not be accurate, please do more test and find what's most suitable for your game.\n            this._am.setMaxConcurrentTask(2);\n            cc.log(\"Max concurrent tasks count have been limited to 2\");\n        }\n    }\n\n    handleManifestFile(newUrl : string){\n        cc.log(\"[HOTUPDATE] newUrl: \" + newUrl);\n        if (this._am.getState() === jsb.AssetsManager.State.UNINITED) {\n            //优先查找缓存里的manifest，如果没有则启用关联的project.manifest\n            let manifestString : string = jsb.fileUtils.getStringFromFile(this._storagePath + \"/project.manifest\");\n            if(manifestString.length === 0){\n                manifestString = jsb.fileUtils.getStringFromFile(this.manifestUrl.nativeUrl);\n                //cc.log(\"manifestString: \", manifestString);\n            }\n            //动态修改热更新的地址为newUrl\n            let obj = JSON.parse(manifestString);\n            obj.packageUrl = newUrl;\n            obj.remoteManifestUrl = newUrl + \"project.manifest\";\n            obj.remoteVersionUrl  = newUrl + \"version.manifest\";\n            let afterString = JSON.stringify(obj);\n            cc.log(\"remoteVersionUrl: \", obj.remoteVersionUrl);\n            let manifest = new jsb.Manifest(afterString, this._storagePath);\n            this._am.loadLocalManifest(manifest, this._storagePath);\n        }\n    }\n\n    checkCb (event) {\n        cc.log('Code: ' + event.getEventCode());\n        switch (event.getEventCode())\n        {\n            case jsb.EventAssetsManager.ERROR_NO_LOCAL_MANIFEST:\n                cc.log( \"No local manifest file found, hot update skipped.\");\n                this.wrapper.active = false;\n                break;\n            case jsb.EventAssetsManager.ERROR_DOWNLOAD_MANIFEST:\n            case jsb.EventAssetsManager.ERROR_PARSE_MANIFEST:\n                cc.log(\"Fail to download manifest file, hot update skipped.\");\n                this.wrapper.active = false;\n                break;\n            case jsb.EventAssetsManager.ALREADY_UP_TO_DATE:\n                cc.log(\"Already up to date with the latest remote version.\");\n                this.wrapper.active = false;\n                break;\n            case jsb.EventAssetsManager.NEW_VERSION_FOUND:\n                cc.log('New version found, please try to update.');\n                this.progressBar.fillRange = 0;\n                break;\n            default:\n                return;\n        }\n        \n        this._am.setEventCallback(null);\n        //this._checkListener = null;\n        this._updating = false;\n        \n        if(event.getEventCode() === jsb.EventAssetsManager.NEW_VERSION_FOUND){\n            this.wrapper.active = true;\n            this.hotUpdate();\n        }\n    }\n\n    updateCb (event) {\n        let needRestart = false;\n        let failed = false;\n        switch (event.getEventCode())\n        {\n            case jsb.EventAssetsManager.ERROR_NO_LOCAL_MANIFEST:\n                cc.log('No local manifest file found, hot update skipped.');\n                failed = true;\n                break;\n            case jsb.EventAssetsManager.UPDATE_PROGRESSION:\n                let totalFiles = event.getTotalFiles();\n                let downloadedFiles = event.getDownloadedFiles();\n                if(totalFiles >= 0 && downloadedFiles > 0){\n                    let progress = downloadedFiles / totalFiles;\n                    this.countLabel.string = (progress * 100.00).toFixed(2) + \"%\" + ` (${downloadedFiles}/${totalFiles})`;\n                    this.progressBar.fillRange = progress;\n                } else {\n                    this.countLabel.string = \"0%\";\n                }\n\n                let msg = event.getMessage();\n                if (msg) {\n                    cc.log('Updated file: ' + msg);\n                }\n                break;\n            case jsb.EventAssetsManager.ERROR_DOWNLOAD_MANIFEST:\n            case jsb.EventAssetsManager.ERROR_PARSE_MANIFEST:\n                cc.log('[ERROR_PARSE_MANIFEST] Fail to download manifest file, hot update skipped.');\n                failed = true;\n                break;\n            case jsb.EventAssetsManager.ALREADY_UP_TO_DATE:\n                cc.log('Already up to date with the latest remote version.');\n                failed = true;\n                break;\n            case jsb.EventAssetsManager.UPDATE_FINISHED:\n                cc.log('Update finished. ' + event.getMessage());\n                this.countLabel.string = \"100% 更新完成，遊戲重新啟動中...\";\n                needRestart = true;\n                SETTINGS.hotUpdateVersion = this.remoteVersion;\n                SETTINGS.save();\n                break;\n            case jsb.EventAssetsManager.UPDATE_FAILED:\n                cc.log('Update failed. ' + event.getMessage());\n                this._updating = false;\n                this._canRetry = true;\n                break;\n            case jsb.EventAssetsManager.ERROR_UPDATING:\n                cc.log('Asset update error: ' + event.getAssetId() + ', ' + event.getMessage());\n                break;\n            case jsb.EventAssetsManager.ERROR_DECOMPRESS:\n                cc.log(event.getMessage());\n                break;\n            default:\n                break;\n        }\n\n        if (failed) {\n            this._am.setEventCallback(null);\n            this._updateListener = null;\n            this._updating = false;\n            this.retry();\n        }\n\n        if (needRestart) {\n            this._am.setEventCallback(null);\n            this._updateListener = null;\n            // Prepend the manifest's search path\n            let searchPaths = jsb.fileUtils.getSearchPaths();\n            let newPaths = this._am.getLocalManifest().getSearchPaths();\n            cc.log(\"[newPaths] \" + JSON.stringify(newPaths));\n            Array.prototype.unshift.apply(searchPaths, newPaths);\n            cc.log(\"[searchPaths] \" + JSON.stringify(searchPaths));\n            // This value will be retrieved and appended to the default search path during game startup,\n            // please refer to samples/js-tests/main.js for detailed usage.\n            // !!! Re-add the search paths in main.js is very important, otherwise, new scripts won't take effect.\n            cc.sys.localStorage.setItem('HotUpdateSearchPaths' + this._localVersion, JSON.stringify(searchPaths));\n            \n            //HotUpdateSearchPaths\n            jsb.fileUtils.setSearchPaths(searchPaths);\n\n            cc.audioEngine.stopAll();\n            cc.log(\"[hotupdate][done] restart game\");\n            if(sdkbox.IAP){\n                cc.log(\" clean sdkbox iap\");\n                sdkbox.IAP.setListener({});\n            }\n            this.scheduleOnce(()=>{\n                cc.game.restart();\n            }, 3);\n        }\n    }\n\n    retry () {\n        if (!this._updating && this._canRetry) {\n            //this.panel.retryBtn.active = false;\n            this._canRetry = false;\n            \n            cc.log('Retry failed Assets...');\n            this._am.downloadFailedAssets();\n        }\n    }\n\n    checkUpdate () {\n        cc.log(\"[hotupdate] checkUpdate\")\n        if (this._updating) {\n            cc.log('Checking or updating ...');\n            return;\n        }\n        if (this._am.getState() === jsb.AssetsManager.State.UNINITED) {\n            // Resolve md5 url\n            cc.log(\"[hotupdate] loadLocalManifest\");\n            let url = this.manifestUrl.nativeUrl;\n            if (cc.loader.md5Pipe) {\n                url = cc.loader.md5Pipe.transformURL(url);\n            }\n            this._am.loadLocalManifest(url);\n        }\n        if (!this._am.getLocalManifest() || !this._am.getLocalManifest().isLoaded()) {\n            cc.log('Failed to load local manifest ...');\n            return;\n        }\n        this._am.setEventCallback(this.checkCb.bind(this));\n\n        this._am.checkUpdate();\n        this._updating = true;\n    }\n\n    hotUpdate () {\n        cc.log(\"[hotUpdate] bootup\");\n        if (this._am !== null && !this._updating) {\n            cc.log(\"[hotUpdate] begin\");\n            this._am.setEventCallback(this.updateCb.bind(this));\n\n            if (this._am.getState() === jsb.AssetsManager.State.UNINITED) {\n                // Resolve md5 url\n                let url = this.manifestUrl.nativeUrl;\n                if (cc.loader.md5Pipe) {\n                    url = cc.loader.md5Pipe.transformURL(url);\n                }\n                this._am.loadLocalManifest(url);\n            }\n\n            this._failCount = 0;\n            this._am.update();\n            //this.panel.updateBtn.active = false;\n            this._updating = true;\n        } else {\n            this.countLabel.string = \"[hotUpdate] error\";\n        }\n    }\n\n    onDestroy () {\n        if (this._updateListener) {\n            this._am.setEventCallback(null);\n            this._updateListener = null;\n        }\n    }\n}\n","const {ccclass, property} = cc._decorator;\n\n\n@ccclass\nexport default class NewClass extends cc.Component {\n    @property(cc.Label)\n    iapInfo : cc.Label = null;\n\n    onLoad(){\n        this.init();\n    }\n\n    init(){\n        cc.log(\"[IAP] init\");\n        if(cc.sys.isNative){\n            let _this = this;\n            sdkbox.IAP.setDebug(true);\n            sdkbox.IAP.setListener({\n                onInitialized : (success) => {\n                    //this.initLoadingNode.active = false;\n                    cc.log(\"[onInitialized]\", JSON.stringify(success));\n                },\n                onSuccess : (p) => {\n                    let _this = this;\n                    cc.log(\"[onSuccess]\", JSON.stringify(p));\n                },\n                onFailure : (p, msg) => {\n                    cc.log(\"[onFailure]\");\n                    cc.log(JSON.stringify(p), msg);\n                    cc.log(\"購買失敗\");\n                },\n                onCanceled: (p) => {\n                    cc.log(\"[onCanceled]\", JSON.stringify(p));\n                    cc.log(\"購買失敗\");\n                },\n                onRestored : (p) => {\n                    cc.log(\"[onRestored]\",JSON.stringify(p));\n                },\n                onProductRequestSuccess : (products) => {\n                    this.iapInfo.string = JSON.stringify(products);\n                    cc.log(\"[onProductRequestSuccess]\", JSON.stringify(products));\n                },\n                onProductRequestFailure : (msg) => {\n                    cc.log(\"購買失敗 \" + JSON.stringify(msg));\n                    cc.log(\"[onProductRequestFailure]\", JSON.stringify(msg));\n                }\n            });\n\n            //sdkbox.IAP.init(_config);\n            cc.log(\"[sdkbox] init\");\n            if(sdkbox.IAP) sdkbox.IAP.init();\n            //this.scheduleOnce(()=>{\n            //    sdkbox.IAP.refresh();  //触发onProductRequestSuccess，打印所有产品信息\n            //},3);\n            \n        }\n    }\n\n    purchase(event, rawData : string){\n        cc.log(\"[IAP] purchaseing \", rawData);\n        sdkbox.IAP.purchase(rawData);\n    }\n\n}\n","export default class NativeController {\n    public static readonly instance = new NativeController();\n    private constructor() { }\n    \n    public nativeClipBoard(str : string){\n        if (cc.sys.isNative) {\n            jsb.copyTextToClipboard(str);\n        }\n        /*\n        if (cc.sys.isNative&&cc.sys.os==cc.sys.OS_IOS) {\n            let ret = jsb.reflection.callStaticMethod(\"NativeController\",\"sendCopyMessage:\", str);\n            cc.log(ret);\n        }\n\n        if(cc.sys.isNative && cc.sys.os==cc.sys.OS_ANDROID){\n            jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AppActivity\", \"setClipboardData\", \"(Ljava/lang/String;)V\", str);\n        }*/\n    }\n\n    public nativeGetDeviceId(){\n        if (cc.sys.isNative && cc.sys.os==cc.sys.OS_IOS) {\n            let ret = jsb.reflection.callStaticMethod(\"NativeController\",\"getIdfa\");\n            cc.log(ret);\n            return ret;\n        }\n\n        if(cc.sys.isNative && cc.sys.os==cc.sys.OS_ANDROID){\n            let deviceid = jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AppActivity\", \"getDeviceId\", \"()Ljava/lang/String;\");\n            cc.log(deviceid);\n            return deviceid;\n        }\n\n        return \"\";\n    }\n\n    public nativeGetAppId(){\n        if (cc.sys.isNative&&cc.sys.os==cc.sys.OS_IOS) {\n            let ret = jsb.reflection.callStaticMethod(\"NativeController\",\"getAppId\");\n            cc.log(ret);\n            return ret;\n        }\n\n        if(cc.sys.isNative && cc.sys.os==cc.sys.OS_ANDROID){\n            let ret = jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AppActivity\", \"getAppid\", \"()Ljava/lang/String;\");\n            cc.log(ret);\n            return ret;\n        }\n\n        return \"\";\n    }\n\n    public keepScreenOn(){\n        //cc.Devicel里面已有实现\n        //if (cc.sys.isNative&&cc.sys.os==cc.sys.OS_IOS) {\n        //    let ret = jsb.reflection.callStaticMethod(\"NativeController\",\"keepScreenOn\");\n        //    cc.log(\"[keepScreenOn]\");\n        //    return ret;\n        //}\n        //return;\n\n        if (cc.sys.isNative) {\n            jsb.Device.setKeepScreenOn(true);\n            //cc['Device'].setKeepScreenOn(true)\n        }\n    }\n\n    public saveToPhotoAlbum(imgPath : string){\n        if (cc.sys.isNative && cc.sys.os==cc.sys.OS_IOS) {\n            let ret = jsb.reflection.callStaticMethod(\"NativeController\", \"saveToPhotoAlbum:\", imgPath);\n            cc.log(\"[Native] saveToPhotoAlbum\");\n            return ret;\n        }\n\n        if(cc.sys.isNative && cc.sys.os==cc.sys.OS_ANDROID){\n            jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AppActivity\", \"saveToPhotoAlbum\", \"(Ljava/lang/String;)V\", imgPath);\n            cc.log(\"[Native] saveToPhotoAlbum\");\n        }\n    }\n\n    public selectPhotoFromAlbum(){\n        if (cc.sys.isNative && cc.sys.os==cc.sys.OS_IOS) {\n            let ret = jsb.reflection.callStaticMethod(\"NativeController\", \"openPhoto\");\n            cc.log(\"[Native] selectPhotoFromAlbum\");\n            return ret;\n        }\n        \n    }\n\n    public cropPicturesCallback(purpose : string, url : string){\n        cc.log(`[cropPicturesCallback] purpose: ${purpose} url: ${url}`);\n    }\n\n}","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        mask: {\n            default: null,\n            type: cc.Mask,\n            tooltip:'需要刮开的'\n        },\n        scrapteRadiusX: {\n            default: 25.0,\n            type: cc.Float,\n            tooltip: '绘制点图形的x轴半径'\n        },\n        scrapteRadiusY: {\n            default: 35.0,\n            type: cc.Float,\n            tooltip: '绘制点图形的Y轴半径'\n        },\n        scrapteArea: {\n            default: 0.5,\n            type: cc.Float,\n            tooltip: '需要刮开的图层面积的多少'\n        },\n        scrapeEvents: {\n            default: [],\n            type: [cc.Component.EventHandler],\n            tooltip: '擦除完成后所触发的事件'\n        },\n\n    },\n\n    onLoad: function () {\n        this.activeMaskNode();\n    },\n\n    activeMaskNode() {\n        this.getinitNum();\n        this.node.on(cc.Node.EventType.TOUCH_START, this._onTouchBegin, this);\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this._onTouchMoved, this);\n        this.node.on(cc.Node.EventType.TOUCH_END, this._onTouchEnd, this);\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this._onTouchCancel, this);\n    },\n\n    /**\n     * 结束刮图的动作监听\n     */\n    endScrape(){\n        this.node.off(cc.Node.EventType.TOUCH_START, this._onTouchBegin, this);\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this._onTouchMoved, this);\n        this.node.off(cc.Node.EventType.TOUCH_END, this._onTouchEnd, this);\n        this.node.off(cc.Node.EventType.TOUCH_CANCEL, this._onTouchCancel, this);\n    },\n    /**\n     * 点击开始\n     * @param {*} event \n     */\n    _onTouchBegin: function (event) {\n        cc.log('touchBegin');    \n        this.comFun(event);\n    },\n\n    _onTouchMoved: function (event) {\n        this.comFun(event);\n    },\n\n    _onTouchEnd: function (event) {\n        cc.log('touchEnd');\n        this.checkScrape();\n        this.comFun(event);\n    },\n\n    _onTouchCancel: function (event) {\n        cc.log('TouchCancel')\n        this.checkScrape();\n    },\n    \n    onDestroy: function () {\n        this.endScrape();\n    },\n\n    comFun(event) {\n        var point = this.getPos(event);\n        this.checkPixelPiont(point);\n        this._addCircle(point);\n    },\n\n    /**\n     * 进行刮开的操作\n     * @param {*} point \n     */\n    _addCircle: function (point) {\n        var graphics = this.mask._graphics;\n        //cc.log(\"xxxx:\",graphics)\n        var color = cc.color(0, 0, 0, 255);\n        // 绘制椭圆\n        graphics.ellipse(point.x, point.y, this.scrapteRadiusX * 2, this.scrapteRadiusY * 2);\n        graphics.lineWidth = 2;\n        // 填充颜色为透明\n        graphics.fillColor = color;\n        // 开始填充颜色\n        graphics.fill();\n    },\n\n    /**\n     * 检查是否完成擦除\n     */\n    checkScrape() {\n        cc.log('目标数是：' + this.achieveNum);\n        cc.log('现在已经刮开' + this.pixelNum);\n        if (this.achieveNum < this.pixelNum) {\n            cc.log(\"已经刮完图层\");\n            this.achieveScrape();\n        }\n    },\n\n    /**\n     * 获得点击的位置\n     * @param {事件} e \n     */\n    getPos(e) {\n        var point = e.touch.getLocation();\n        point = this.node.convertToNodeSpaceAR(point);\n        return point;\n    },\n\n    /**\n     * 获取初始值\n     */\n    getinitNum() {\n        this.pixelNum = 0;\n        // 记录要擦除多少像素点才能完成擦除操作\n        this.achieveNum = this.scrapteArea * this.initPixel();\n    },\n\n    /**\n     * 根据所设计的接触点的大小设置出一个点矩阵,在根据接触点与点矩阵的\n     * 距离判断当前已经刮开了图像的多少了\n     */\n    initPixel() {\n        this.scrapeNode = this.mask.node.children[0];\n        let x = this.scrapeNode.width, y = this.scrapeNode.height;\n\n        //根据所设texture的大小来改变主节点的大小\n        this.node.width = x;\n        this.node.height = y;\n\n        //根据接触点的大小来设置矩阵点多少以及点之间的距离\n        this.widthWide = x / 2 + 20;\n        this.heightWide = x / 2 + 20;\n        var zx = x / 2, zy = y / 2, dx = -zx, dy = -zy, dy1 = dy;\n        var pixelPiont = [];\n        var rx = this.scrapteRadiusX * 2;\n        var ry = this.scrapteRadiusY * 2;\n\n        // 开始排列矩阵\n        for (; dx <= zx; dx += rx) {\n            for (dy = dy1; dy <= zy; dy += ry) {\n                var p = [dx, dy];\n                // 该属性确保每个矩阵点只能有一次的检测操作\n                // 被检测完后变为false不能被二次检测\n                p.isTouch = true;\n                pixelPiont.push(p);\n            }\n        }\n        this.pixelPiont = pixelPiont;\n        //返回像素点的个数\n        return pixelPiont.length;\n    },\n\n    /**\n     * 检查是否画在新的像素点上,若是话在了新的点上,接使刮开数执行++操作\n     */\n    checkPixelPiont(point) {\n        var pixelPiont = this.pixelPiont;\n        var x, y;\n        for (var i in pixelPiont) {\n            x = Math.abs(point.x - pixelPiont[i][0]);\n            y = Math.abs(point.y - pixelPiont[i][1]);\n            if (x <= this.scrapteRadiusX && y <= this.scrapteRadiusY && pixelPiont[i].isTouch) {\n                // 让该元素不可以响应触摸功能\n                pixelPiont[i].isTouch = false;\n                this.pixelNum++;\n                return;\n            }\n        }\n    },\n\n    /**\n     * 完成刮蹭事件\n     */\n    achieveScrape() {\n        this.endScrape();\n        // 执行渐隐效果，卡片消失\n        this.mask.node.runAction(cc.fadeOut(0.5));\n        this.scheduleOnce((() => {\n            // 执行回调事件\n            cc.Component.EventHandler.emitEvents(this.scrapeEvents, new cc.Event.EventCustom('scrapeEvents'));\n            //this.node.destroy();\n        }).bind(this), 0.6);\n    },\n});","const {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class NewClass extends cc.Component {\n\n    @property({type : cc.Mask, tooltip : \"需要刮开的mask\"})\n    mask : cc.Mask = null;\n\n    @property({tooltip : \"绘制点图形的x轴半径\"})\n    scrapteRadiusX = 30.0;\n\n    @property({tooltip : \"绘制点图形的y轴半径\"})\n    scrapteRadiusY = 30.0;\n\n    @property({tooltip : \"需要刮开的图层面积的百分比\"})\n    scrapteArea = 0.5;\n\n    @property\n    pixelNum = 0;\n\n    @property\n    achieveNum = 0;\n\n    @property\n    pixelPiont : any = null;\n\n    @property({\n        type: [cc.Component.EventHandler],\n        tooltip: '擦除完成后所触发的事件'\n    })\n    scrapeEvents = [];\n\n    onLoad() {\n        this.init();\n        (window as any).SCRATCH = this;\n    }\n\n    onDestroy () {\n        this.endScrape();\n    }\n\n    init() {\n        this.getinitNum();\n        this.node.on(cc.Node.EventType.TOUCH_START, this._onTouchBegin, this);\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this._onTouchMoved, this);\n        this.node.on(cc.Node.EventType.TOUCH_END, this._onTouchEnd, this);\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this._onTouchCancel, this);\n    }\n\n    /**\n     * 结束刮刮卡的动作监听\n     */\n    endScrape(){\n        this.node.off(cc.Node.EventType.TOUCH_START, this._onTouchBegin, this);\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this._onTouchMoved, this);\n        this.node.off(cc.Node.EventType.TOUCH_END, this._onTouchEnd, this);\n        this.node.off(cc.Node.EventType.TOUCH_CANCEL, this._onTouchCancel, this);\n    }\n\n    /**\n     * 获取初始值\n     */\n    getinitNum() {\n        this.pixelNum = 0;\n        // 记录要擦除多少像素点才能完成擦除操作\n        this.achieveNum = this.scrapteArea * this.initPixel();\n    }\n\n    /**\n     * 根据所设计的接触点的大小设置出一个点矩阵,在根据接触点与点矩阵的\n     * 距离判断当前已经刮开了图像的多少了\n     */\n    initPixel() {\n        let maskNode = this.mask.node.children[0];\n        let x = maskNode.width, y = maskNode.height;\n\n        //根据接触点的大小来设置矩阵点多少以及点之间的距离\n        let zx = x / 2, zy = y / 2, dx = -zx, dy = -zy, dy1 = dy;\n        let pixelPiont = [];\n        let rx = this.scrapteRadiusX * 2;\n        let ry = this.scrapteRadiusY * 2;\n\n        // 开始排列矩阵\n        for (; dx <= zx; dx += rx) {\n            for (dy = dy1; dy <= zy; dy += ry) {\n                let p = [dx, dy];\n                // 该属性确保每个矩阵点只能有一次的检测操作\n                // 被检测完后变为false不能被二次检测\n                p.isTouch = true;\n                pixelPiont.push(p);\n            }\n        }\n        this.pixelPiont = pixelPiont;\n        //返回像素点的个数\n        return pixelPiont.length;\n    }\n\n        /**\n     * 点击开始\n     * @param {*} event \n     */\n    _onTouchBegin (event) {\n        //cc.log('touchBegin');\n        this.comFun(event);\n    }\n\n    _onTouchMoved (event) {\n        this.comFun(event);\n    }\n\n    _onTouchEnd (event) {\n        //cc.log('touchEnd');\n        this.checkScrape();\n        this.comFun(event);\n    }\n\n    _onTouchCancel (event) {\n        cc.log('TouchCancel')\n        this.checkScrape();\n    }\n\n    comFun(event) {\n        let point = event.touch.getLocation();\n        point = this.mask.node.convertToNodeSpaceAR(point);\n        this.checkPixelPiont(point);\n        this._addCircle(point);\n    }\n\n    /**\n     * 检查是否完成擦除\n     */\n    checkScrape() {\n        cc.log(`已经刮开: ${this.pixelNum}/${this.achieveNum}`);\n        if (this.achieveNum < this.pixelNum) {\n            cc.log(\"[已经刮完图层]\");\n            this.achieveScrape();\n        }\n    }\n\n    /**\n     * 检查是否画在新的像素点上,若是话在了新的点上,接使刮开数执行++操作\n     */\n    checkPixelPiont(point) {\n        let pixelPiont = this.pixelPiont;\n        let x, y;\n        for (var i in pixelPiont) {\n            x = Math.abs(point.x - pixelPiont[i][0]);\n            y = Math.abs(point.y - pixelPiont[i][1]);\n            if (x <= this.scrapteRadiusX * 2 && y <= this.scrapteRadiusY * 2 && pixelPiont[i].isTouch) {\n                // 让该元素不可以响应触摸功能\n                pixelPiont[i].isTouch = false;\n                this.pixelNum++;\n                return;\n            }\n        }\n    }\n\n    /**\n     * 完成刮蹭事件\n     */\n    achieveScrape() {\n        this.endScrape();\n        // 执行渐隐效果，卡片消失\n        this.mask.node.runAction(cc.fadeOut(0.5));\n        this.scheduleOnce((() => {\n            // 执行回调事件\n            cc.Component.EventHandler.emitEvents(this.scrapeEvents, new cc.Event.EventCustom('scrapeEvents'));\n            //this.node.destroy();\n        }).bind(this), 0.6);\n    }\n\n    /**\n     * 进行刮开的操作\n     * @param {*} point \n     */\n    _addCircle (point) {\n        var graphics = this.mask._graphics;\n        //cc.log(\"xxxx:\",graphics)\n        var color = cc.color(0, 0, 0, 255);\n        // 绘制椭圆\n        graphics.ellipse(point.x, point.y, this.scrapteRadiusX * 2, this.scrapteRadiusY * 2);\n        graphics.lineWidth = 2;\n        // 填充颜色为透明\n        graphics.fillColor = color;\n        // 开始填充颜色\n        graphics.fill();\n    }\n\n    /*\n    start () {\n        let self = this;\n        this.node.on(cc.Node.EventType.TOUCH_START,(event)=>{\n            let point = event.touch.getLocation();\n            point = self.mask.node.convertToNodeSpaceAR(point);\n            self._addCircle(point);\n        },this);\n        this.node.on(cc.Node.EventType.TOUCH_MOVE,(event)=>{\n            let point = event.touch.getLocation();\n            point = self.mask.node.convertToNodeSpaceAR(point);\n            self._addCircle(point);\n        },this);\n        \n    }\n\n    _addCircle(pos : cc.Vec2) {\n        let _graphics = this.mask._graphics;\n        cc.log(_graphics);\n        _graphics.lineWidth = 1;\n        _graphics.strokeColor = cc.color(255,0,0);\n        _graphics.fillColor = cc.color(0,255,0);\n        _graphics.circle (pos.x,pos.y,this.size);\n        _graphics.fill();\n        _graphics.stroke();\n    }*/\n}\n","const {ccclass, property} = cc._decorator;\n\nimport Native from \"./NativeController\";\nimport NativeController from \"./NativeController\";\n\n@ccclass\nexport default class NewClass extends cc.Component {\n\n    @property(cc.Sprite)\n    testSprite : cc.Sprite = null;\n\n    onClick(event){\n       cc.log(NativeController.instance.selectPhotoFromAlbum());\n    }\n\n    onClick2(event){\n        cc.loader.load(\"http://d.lanrentuku.com/down/png/1904/international_food/fried_rice.png\", (err, texture)=>{\n            this.testSprite.spriteFrame = new cc.SpriteFrame(texture);\n        });\n    }\n}\n"],"sourceRoot":"/source/","file":"project.dev.js"}